// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  name     String
  teamId   Int    @default(0)
}

model Teams {
  id      Int      @id @default(autoincrement())
  name    String
  members Member[]
}

model Member {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  number    String    @unique
  otp       String?
  otpExpiry DateTime?
  createdAt DateTime  @default(now())
  status    String    @default("Active")
  updatedAt DateTime  @updatedAt
  firstname String
  lastname  String
  team      Teams     @relation(fields: [teamId], references: [id])
  teamId    Int
  clients   Client[]
}

model Client {
  id              Int                    @id @default(autoincrement())
  name            String
  behaviour       String
  company         String
  status          Int
  dealStatus      String                 @default("Accepted")
  dealValue       Int
  description     String
  remarks         String
  Member          Member?                @relation(fields: [memberId], references: [id])
  memberId        Int?
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt
  fieldVisits     Int                    @default(0)
  detailedRemarks String?
  contactDetails  ClientContactDetails[]
  clientAddress   ClientAddress[]
  clientMeetings  ClientMeeting[]
}

model ClientContactDetails {
  id            Int     @id @default(autoincrement())
  contactNumber String  @unique
  Client        Client? @relation(fields: [clientId], references: [id])
  clientId      Int
}

model ClientAddress {
  id         Int    @id @default(autoincrement())
  doorNumber String @default("")
  address    String @default("")
  lat        Float?
  lng        Float?
  Client     Client @relation(fields: [clientId], references: [id])
  clientId   Int    @unique
}

model ClientMeeting {
  id       Int      @id @default(autoincrement())
  date     DateTime
  notes    String
  Client   Client?  @relation(fields: [clientId], references: [id])
  clientId Int
}
